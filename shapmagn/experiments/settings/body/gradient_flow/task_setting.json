{
    "dataset": {
        "name": "pair_dataset",
        "pair_dataset": {
            "reader" : "body_dataset_utils.body_reader()",
                "sampler" : "body_dataset_utils.body_sampler(num_sample=-1, method='voxelgrid',scale=-1)",
            "normalizer": "body_dataset_utils.body_normalizer()",
            "max_num_for_loading": [-1,-1,-1,-1],
            "load_training_data_into_memory": true,
            "aug_data_via_inverse_reg_direction": false
        }
    },
    "tsk_set": {
        "batch_sz": [2,1,1,1],
        "gpu_ids": 0,
        "max_batch_num_per_epoch": [
                800,
                600,
                50
            ],
        "model": "optimization",
        "method_name": "discrete_flow_opt_and_prealign_opt",
        "loss_name": "geomloss",
        "source_target_generator": "shape_pair_utils.create_source_and_target_shape()",
        "prealign_opt": {
            "module_type": "probreg",
            "print_step": 10,
            "probreg": {
                "method_name": "filterreg",
                "cpd": {
                    "cpd_obj": "probreg_module.registration_cpd(tf_type_name='rigid', w=0.0, maxiter=200, tol=0.00001,use_cuda=True,callbacks=[])"
                },
                "filterreg":
                {
                    "filterreg_obj": "probreg.filterreg.registration_filterreg(sigma2=None, update_sigma2=True, w=0.3,objective_type='pt2pt', maxiter=200, tol=0.001, min_sigma2=1.0e-4, feature_fn=lambda x: x)"
                }
            }
        },
        "gradient_flow_opt": {
            "print_step":1,
            "gauss_kernel_obj": "keops_kernels.LazyKeopsKernel('gauss',sigma=0.05)",
            "interpolator_obj": "point_interpolator.kernel_interpolator(scale=0.1, exp_order=2)",
            "sim_loss": {
                "loss_list": ["geomloss"],
                "loss_weight_strategy_dict":{},
                "loss_activate_epoch_list": [0],
                "geomloss":{
                    "attr": "points",
                    "geom_obj": "geomloss.SamplesLoss(loss='sinkhorn',blur=0.0002, scaling=0.8, debias=True)"
                },
                "l2": {
                    "attr": "points"
                },
                "varifold": {
                    "kernel_backend": "keops",
                    "sigma": 0.1

                },
                "current": {
                    "kernel_backend": "keops",
                    "sigma": 0.1
                }
            }
        },
        "multi_scale_optimization_prealign": {
            "iter_per_scale": [1],
            "rel_ftol_per_scale": [1e-4,1e-4, 1e-4],
            "init_lr_list": [1e-3,1e-4],
            "save_every_n_iter": 20,
            "shape_sampler_type": "point_grid",
            "point_grid_scales": [ 0.01],
            "stragtegy" : "use_optimizer_defined_from_model"
        },
        "multi_scale_optimization": {
            "point_grid_scales": [ -1],
            "iter_per_scale": [3],
            "rel_ftol_per_scale": [1e-4,1e-4, 1e-4],
            "init_lr_list": [1e-3,1e-4],
            "save_every_n_iter": 20,
            "shape_sampler_type": "point_grid",
            "stragtegy" : "use_optimizer_defined_here"
        },
        "save_fig_on": true,
        "is_train": false
    }
}